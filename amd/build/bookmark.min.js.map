{"version":3,"sources":["../src/bookmark.js"],"names":["define","$","Repository","CustomEvents","Notification","Ajax","Toast","Str","SELECTORS","ACTION_ADD_BOOKMARK","ACTION_REMOVE_BOOKMARK","setBookmarkCourses","args","promise","call","methodname","setCourseBookmarkState","root","courseId","status","string","courses","then","result","warnings","length","get_string","str","add","showBookmarkIcon","alert","catch","exception","find","removeClass","addClass","init","attr","on","events","activate","e","data","originalEvent","preventDefault"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Browsercheck\n *\n * @package    theme_nova\n * @copyright  2020 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'block_myoverview/repository',\n    'core/custom_interaction_events',\n    'core/notification',\n    'core/ajax',\n    'core/toast',\n    'core/str'\n],\nfunction(\n    $,\n    Repository,\n    CustomEvents,\n    Notification,\n    Ajax,\n    Toast,\n    Str\n) {\n\n    var SELECTORS = {\n        ACTION_ADD_BOOKMARK: '[data-action=\"add-bookmark\"]',\n        ACTION_REMOVE_BOOKMARK: '[data-action=\"remove-bookmark\"]',\n    };\n\n    /**\n     * Set the favourite / bookmark state on a list of courses.\n     *\n     * Valid args are:\n     * Array courses  list of course id numbers.\n     *\n     * @param {Object} args Arguments send to the webservice.\n     * @return {Promise} Resolve with warnings.\n     */\n    var setBookmarkCourses = function(args) {\n\n        var request = {\n            methodname: 'core_course_set_favourite_courses',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        return promise;\n    };\n\n    /**\n     * Set the courses bookmark status and push to repository\n     *\n     * @param {object} root The root element for the bookmark widget.\n     * @param {Number} courseId Course id to favourite.\n     * @param {Bool} status new favourite status.\n     * @return {Promise} Repository promise.\n     */\n    var setCourseBookmarkState = function(root, courseId, status) {\n        var string = 'bookmarkadded';\n        if (!status) {\n            string = 'bookmarkremoved';\n        }\n        return setBookmarkCourses({\n            courses: [\n                    {\n                        'id': courseId,\n                        'favourite': status\n                    }\n                ]\n        }).then(function(result) {\n            if (result.warnings.length == 0) {\n                Str.get_string(string, 'theme_arupboost').then(function(str) {\n                    Toast.add(str);\n                });\n                showBookmarkIcon(root, status);\n            } else {\n                Notification.alert('Bookmarking course failed', 'Could not change bookmark state');\n            }\n        }).catch(Notification.exception);\n    };\n\n    /**\n     * Show the add or remove bookmark icon\n     *\n     * @param {object} root The root element for the bookmark widget.\n     * @param {Bool} status true for remove bookmark.\n     */\n    var showBookmarkIcon = function(root, status) {\n        if (status) {\n            root.find(SELECTORS.ACTION_REMOVE_BOOKMARK).removeClass('d-none');\n            root.find(SELECTORS.ACTION_ADD_BOOKMARK).addClass('d-none');\n        } else {\n            root.find(SELECTORS.ACTION_REMOVE_BOOKMARK).addClass('d-none');\n            root.find(SELECTORS.ACTION_ADD_BOOKMARK).removeClass('d-none');\n        }\n    };\n\n    /**\n     * Init JS and run eventlisteners\n     *\n     * @param {object} root The root element for the bookmark widget.\n     */\n    var init = function(root) {\n        root = $(root);\n        var courseId = root.attr('data-course-id');\n\n        root.on(CustomEvents.events.activate, SELECTORS.ACTION_ADD_BOOKMARK, function(e, data) {\n            setCourseBookmarkState(root, courseId, true);\n            data.originalEvent.preventDefault();\n        });\n\n        root.on(CustomEvents.events.activate, SELECTORS.ACTION_REMOVE_BOOKMARK, function(e, data) {\n            setCourseBookmarkState(root, courseId, false);\n            data.originalEvent.preventDefault();\n        });\n    };\n\n    return {\n        init: init\n    };\n});"],"file":"bookmark.min.js"}